name: Push Pack

on:
    push:
        paths:
            - "pack.mcmeta"

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint Code Base
        run: find . -type f \( -iname \*.json -o -iname \*.mcmeta \) -print0 | while IFS= read -r -d '' line; do echo Validating ${line} && jq empty ${line} || exit 1; done && echo All JSON files are valid
  validate-version:
    name: Validate Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: get-previous-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
      - name: Validate Version
        env:
          PREVIOUS_VERSION: ${{ steps.get-previous-tag.outputs.tag }}
        run: |
          CURRENT_VERSION=$(jq -r .pack.version pack.mcmeta)
          PREV_VER_GEQ_CUR_VER=$(
            jq -r -n --arg previous_version "${PREVIOUS_VERSION}" --arg current_version "${CURRENT_VERSION}" '
            def ver2arr($inp): ($inp | split(".") | map(tonumber)); 
              ver2arr($previous_version) as $ver_prev  
            | ver2arr($current_version) as $ver_cur 
            | if ($ver_prev[0] > $ver_cur[0]) or ($ver_prev[1] > $ver_cur[1] and $ver_cur[1] != 0) or ($ver_prev[2] >= $ver_cur[2] and $ver_cur[2] != 0) then true else false end
          ')
          if [ "${PREV_VER_GEQ_CUR_VER}" = true ]; then
            echo "Previous version is greater than or equal to current version."
            echo "Please update pack.mcmeta with a valid SemVer version greater than ${PREVIOUS_VERSION} before pushing again!"
            exit 1
          fi
  build:
    name: Compress and Send Pack
    needs: [lint, validate-version]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get previous tag
      id: get-previous-tag
      uses: actions-ecosystem/action-get-latest-tag@v1
    - name: Get pack version from pack.mcmeta
      id: lookupPackVersion
      run: echo "::set-output name=PACK_VERSION::$(jq -r .pack.version pack.mcmeta)"
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ''
        custom_tag: ${{ steps.lookupPackVersion.outputs.PACK_VERSION }}
    - name: Minify JSON
      run: find . -type f \( -iname \*.json -o -iname \*.mcmeta \) -print0 | while IFS= read -r -d '' line; do jq -c 'del(.credit, .groups)' ${line} > ${line}.tmp && mv ${line}.tmp ${line}; done
    - name: Install pngquant
      run: sudo apt-get install -y pngquant libpng-dev
    - name: Minify images
      continue-on-error: true
      run: find . -type f -name '*.png' -exec pngquant --strip -f --ext .png {} \; 2>/dev/null
    - name: Compress pack
      run: zip -8 -r -X  ParadisuResourcePack.zip *
    - name: Generate release diff
      env:
        BEGIN_COMMIT: ${{ steps.get-previous-tag.outputs.tag }}
        END_COMMIT: ${{ steps.lookupPackVersion.outputs.PACK_VERSION }}
      run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${BEGIN_COMMIT}..${END_COMMIT} > release_notes.md
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ParadisuResourcePack.zip
        allowUpdates: true
        bodyFile: "release_notes.md"
        draft: false
        prerelease: false
        tag: ${{ steps.lookupPackVersion.outputs.PACK_VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install Websocat
      run: wget https://github.com/vi/websocat/releases/download/v1.9.0/websocat_linux64 && sudo chmod +x websocat_linux64 && sudo mv websocat_linux64 /usr/bin/websocat
    - name: Update pack on server
      continue-on-error: true
      env:
        PTERODACTYL_TOKEN: ${{ secrets.PTERODACTYL_TOKEN }}
      run: |
        curl -sL "https://panel.paradisu.net/api/client/servers/978fd706/websocket" -H 'Accept: application/json' -H 'Content-Type: application/json' -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X GET | jq -c '{"event":"auth","args":[.data.token]}' > console_auth.json
        curl "https://panel.paradisu.net/api/client/servers/978fd706/command" -H 'Accept: application/json' -H 'Content-Type: application/json' -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X POST -d '{"command": "frp generatehashes"}' &
        (cat console_auth.json | websocat -qn wss://node.paradisu.net:8080/api/servers/978fd706-76c2-453a-ac64-0ec58c98f5e2/ws) | while IFS= read -r line; do
            if [[ $line =~ "packs changed! Saving to config" ]]; then
               echo pack updated
               break
            fi
        done
        sleep 0.25
        curl "https://panel.paradisu.net/api/client/servers/978fd706/command" -H 'Accept: application/json' -H 'Content-Type: application/json' -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X POST -d '{"command": "frp reload resend"}'
